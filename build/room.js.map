{"version":3,"file":"room.js","sources":["../src/room.js"],"sourcesContent":["'use strict'\n\n/**\n * Creates a new http client to a roomdb instance\n *\n * @param {host} host of living room server (defaults to http://localhost:3000)\n */\nimport fetch from 'node-fetch'\nimport io from 'socket.io-client'\nimport bonjour from 'nbonjour'\n\nfunction getEnv (key) {\n  if (typeof process !== 'undefined') return process.env[key]\n}\n\nexport default class Room {\n  constructor (host) {\n    this._host = host || getEnv('LIVING_ROOM_HOST') || 'http://localhost:3000'\n    if (!this._host.startsWith('http://')) this._host = `http://${this._host}`\n    this._hosts = new Set(this._host)\n\n    if (bonjour) {\n      const serviceDefinition = { type: 'http', subtypes: ['livingroom'] }\n      this._browser = bonjour.create().find(serviceDefinition, service => {\n        const { type, host, port } = service\n        const uri = `${type}://${host}:${port}`\n        if (this._hosts.has(uri)) return\n        this._hosts.add(uri)\n        console.log(`found new host ${uri}`)\n        console.log(`use \\`room.nexthost()\\` to cycle through hosts`)\n      })\n    }\n    this.connect()\n  }\n\n  nexthost () {\n    io.disconnect(this._host)\n    const ordered = Array.from(this._hosts.values()).sort()\n    const index = ordered.indexOf(this._host)\n    console.write(`switching from ${this._host}`)\n    this._host = ordered[(index + 1) % ordered.length]\n    this.connect()\n  }\n\n  connect () {\n    this._socket = io.connect(this._host)\n    console.log(`connecting to ${this._host}`)\n    if (typeof window === 'object') {\n      this._socket.on('reconnect', () => {\n        window.location.reload(true)\n      })\n    }\n  }\n\n  /**\n   * @param {String | String[]} facts\n   * @param {Function} callback\n   */\n  subscribe (facts, callback) {\n    if (typeof facts === 'string') facts = [facts]\n    const patternsString = JSON.stringify(facts)\n    this._socket.on(patternsString, callback)\n    this._socket.emit('subscribe', patternsString)\n  }\n\n  on (...facts) {\n    const callback = facts.splice(facts.length - 1)[0]\n    const cb = ({ assertions }) => {\n      assertions.forEach(assertion => {\n        for (let key in assertion) {\n          assertion[key] =\n            assertion[key].value ||\n            assertion[key].word ||\n            assertion[key].text ||\n            assertion[key].id\n        }\n        callback(assertion)\n      })\n    }\n    this.subscribe(facts, cb)\n  }\n\n  /**\n   *\n   * @param {String} endpoint assert, retract, select\n   * @param {[String]} facts\n   */\n  _request (endpoint, facts, callback) {\n    if (!['assert', 'retract', 'select', 'facts'].includes(endpoint)) {\n      throw new Error('Unknown endpoint, try assert, retract, select, or facts')\n    }\n\n    if (typeof facts === 'string') facts = [facts]\n\n    if (!(endpoint === 'facts' || facts.length)) {\n      throw new Error('Please pass at least one fact')\n    }\n\n    // Can this return a promise with the result?\n    // Does that even make sense?\n    if (this._socket.connected) {\n      return new Promise((resolve, reject) => {\n        this._socket.emit(endpoint, facts, resolve)\n      })\n    }\n\n    const uri = `${this._host}/${endpoint}`\n\n    const post = {\n      method: 'POST',\n      body: JSON.stringify({ facts }),\n      headers: { 'Content-Type': 'application/json' }\n    }\n\n    return fetch(uri, post)\n      .then(response => response.json())\n      .catch(error => {\n        if (error.code === 'ECONNREFUSED') {\n          let customError = new Error(\n            `No server listening on ${uri}. Try 'npm start' to run a local service.`\n          )\n          customError.code = 'NOTLISTENING'\n          throw customError\n        } else {\n          throw error\n        }\n      })\n  }\n\n  assert (facts, callback) {\n    return this._request('assert', facts, callback)\n  }\n\n  retract (facts, callback) {\n    return this._request('retract', facts, callback)\n  }\n\n  select (facts, callback) {\n    return this._request('select', facts, callback)\n  }\n\n  facts () {\n    return this._request('facts')\n  }\n}\n"],"names":[],"mappings":"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"}